plugins {
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.sonarqube' version '2.7'
    id 'maven-publish'
    id 'java'
}

allprojects {
    group = 'co.personal.aws.sqs'


    repositories {
        mavenLocal()
        jcenter()
    }
}


subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'maven-publish'

    sourceCompatibility = '1.8'

    dependencies {
        implementation 'ch.qos.logback:logback-classic'
        implementation 'ch.qos.logback:logback-core'
        implementation 'org.slf4j:slf4j-api'
        implementation 'org.springframework:spring-context'
        implementation 'org.springframework:spring-core'
        implementation 'org.springframework:spring-context-support'
        implementation 'joda-time:joda-time:2.10.5'
        implementation 'org.projectlombok:lombok:1.18.10'
        implementation 'org.mapstruct:mapstruct:1.3.1.Final'
        implementation 'com.github.spullara.mustache.java:compiler:0.9.6'

        annotationProcessor 'org.projectlombok:lombok:1.18.10'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'

        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:${spring_boot_version}")
        }

        dependencies {

        }
    }

    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("${github_packages_url}/spring-boot-aws-sqs-integration-example")
                credentials {
                    username = System.getenv("GH_PACKAGES_USERNAME")
                    password = System.getenv("GH_PACKAGES_TOKEN")
                }
            }
        }

        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
    }

    sonarqube {
        properties {
            property 'sonar.sources', 'src/main/java'
            property 'sonar.exclusions', '**/*Test*/**'
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}

task version() {
    doLast {
        println project.version
    }
}